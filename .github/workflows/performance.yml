name: Performance

permissions:
  contents: read

on:
  push:
    branches: [ main ]
    paths:
      - '.github/workflows/performance.yml'
      - 'performance/**'
      - 'scripts/*'
      - 'scripts/performance.sh'
      - '!performance/SwiftUIPerformanceQuickstart/PerformanceExample/*.md'
      - '!performance/SwiftUIPerformanceQuickstart/PerformanceExample/Design/**'
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/performance.yml'
      - 'performance/**'
      - 'scripts/*'
      - 'scripts/performance.sh'
      - '!performance/SwiftUIPerformanceQuickstart/PerformanceExample/*.md'
      - '!performance/SwiftUIPerformanceQuickstart/PerformanceExample/Design/**'

  workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
    cancel-in-progress: true

env:
  SAMPLE: Performance
  secrets_passphrase: ${{ secrets.GHASECRETSGPGPASSPHRASE1 }}

jobs:
  spm:
    name: spm (Xcode ${{ matrix.xcode }} - ${{ matrix.name }})
    runs-on: macOS-15
    strategy:
      matrix:
        xcode: ["16.4"]
        include:
          - name: "non-SwiftUI"
            os: iOS
            device: "iPhone 16"
            test: true
            dir: "performance"
            scheme: "PerformanceExampleSwift"
            legacy: false
          - name: "iOS"
            os: iOS
            device: "iPhone 16"
            test: false
            dir: "performance/SwiftUIPerformanceQuickstart/PerformanceExample"
          - name: "tvOS"
            os: tvOS
            device: "Apple TV 4K (3rd generation) (at 1080p)"
            test: false
            dir: "performance/SwiftUIPerformanceQuickstart/PerformanceExample"
    env:
      SETUP: performance
      SPM: true
      DIR: ${{ matrix.dir }}
      OS: ${{ matrix.os }}
      DEVICE: ${{ matrix.device }}
      TEST: ${{ matrix.test }}
      SCHEME: ${{ matrix.scheme }}
      LEGACY: ${{ matrix.legacy }}
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Setup
        run: |
          gem install xcpretty
          cd $SETUP
          ../scripts/install_prereqs/${SETUP}.sh
      - name: Build and Test
        run: ./scripts/test.sh
